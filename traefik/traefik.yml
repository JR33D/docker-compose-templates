################################################################
# Configuration Traefik v2.
# Based on Traefik v2 sample:
# https://github.com/traefik/traefik/blob/v2.10.7/traefik.sample.yml
################################################################

################################################################
# Global configuration
################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: false

################################################################
# EntryPoints configuration
################################################################

# EntryPoints definition
# Optional
entryPoints:
  web:
    address: :80
    http: 
      redirections: 
        entryPoint: 
          to: websecure
          scheme: https
  websecure:
    address: :443
    http: 
      tls: 
        options: default@file

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
# Optional
#log:
  # Log level
  # Optional
  # Default: "ERROR"
  # level: DEBUG

  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  # Optional
  # Default: os.Stdout
  # filePath: log/traefik.log

  # Format is either "json" or "common".
  # Optional
  # Default: "common"
  # format: json

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
# Optional
#accessLog:
  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  # Optional
  # Default: os.Stdout
  # filePath: /path/to/log/log.txt

  # Format is either "json" or "common".
  # Optional
  # Default: "common"
  # format: json

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
# Optional
api:
  # Enable the API in insecure mode
  # Optional
  # Default: false
 insecure: true

  # Enabled Dashboard
  # Optional
  # Default: true
  dashboard: true

################################################################
# Ping configuration
################################################################

# Enable ping
#ping:
  # Name of the related entry point
  # Optional
  # Default: "traefik"
  # entryPoint: traefik

################################################################
# Certificate Resolver configuration
################################################################

certificatesResolvers:
  myresolver:
    # Enable ACME (Let's Encrypt): automatic SSL.
    acme:

      # Email address used for registration.
      # Required
      email: "email@here.tld"

      # File or key used for certificates storage.
      # Required
      storage: "/letsencrypt/acme.json"
      
      # Use a HTTP-01 ACME challenge.
      # Optional
      httpChallenge:

        # EntryPoint to use for the HTTP-01 challenges.
        # Required
        entryPoint: web

      # CA server to use.
      # Uncomment the line to use Let's Encrypt's staging server,
      # leave commented to go to prod.
      # Optional
      # Default: "https://acme-v02.api.letsencrypt.org/directory"
      # caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"

################################################################
# Docker configuration backend
################################################################

providers:
  file: 
    filename: /letsencrypt/default-tls-options.yml
  # Enable Docker configuration backend
 docker:
    # Docker server endpoint. Can be a tcp or a unix socket endpoint.
    # Required
    # Default: "unix:///var/run/docker.sock"
   endpoint: tcp://socket-proxy:2375
   swarmMode: true
   network: web-servers
   watch: true

    # Default host rule.
    # Optional
    # Default: "Host(`{{ normalize .Name }}`)"
    # defaultRule: Host(`{{ normalize .Name }}.docker.localhost`)

    # Expose containers by default in traefik
    # Optional
    # Default: true
   exposedByDefault: false